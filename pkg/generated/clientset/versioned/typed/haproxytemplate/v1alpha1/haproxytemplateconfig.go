// Copyright 2025 Philipp Hossner
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"
	haproxytemplatev1alpha1 "haproxy-template-ic/pkg/apis/haproxytemplate/v1alpha1"
	scheme "haproxy-template-ic/pkg/generated/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// HAProxyTemplateConfigsGetter has a method to return a HAProxyTemplateConfigInterface.
// A group's client should implement this interface.
type HAProxyTemplateConfigsGetter interface {
	HAProxyTemplateConfigs(namespace string) HAProxyTemplateConfigInterface
}

// HAProxyTemplateConfigInterface has methods to work with HAProxyTemplateConfig resources.
type HAProxyTemplateConfigInterface interface {
	Create(ctx context.Context, hAProxyTemplateConfig *haproxytemplatev1alpha1.HAProxyTemplateConfig, opts v1.CreateOptions) (*haproxytemplatev1alpha1.HAProxyTemplateConfig, error)
	Update(ctx context.Context, hAProxyTemplateConfig *haproxytemplatev1alpha1.HAProxyTemplateConfig, opts v1.UpdateOptions) (*haproxytemplatev1alpha1.HAProxyTemplateConfig, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, hAProxyTemplateConfig *haproxytemplatev1alpha1.HAProxyTemplateConfig, opts v1.UpdateOptions) (*haproxytemplatev1alpha1.HAProxyTemplateConfig, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*haproxytemplatev1alpha1.HAProxyTemplateConfig, error)
	List(ctx context.Context, opts v1.ListOptions) (*haproxytemplatev1alpha1.HAProxyTemplateConfigList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *haproxytemplatev1alpha1.HAProxyTemplateConfig, err error)
	HAProxyTemplateConfigExpansion
}

// hAProxyTemplateConfigs implements HAProxyTemplateConfigInterface
type hAProxyTemplateConfigs struct {
	*gentype.ClientWithList[*haproxytemplatev1alpha1.HAProxyTemplateConfig, *haproxytemplatev1alpha1.HAProxyTemplateConfigList]
}

// newHAProxyTemplateConfigs returns a HAProxyTemplateConfigs
func newHAProxyTemplateConfigs(c *HaproxyTemplateICV1alpha1Client, namespace string) *hAProxyTemplateConfigs {
	return &hAProxyTemplateConfigs{
		gentype.NewClientWithList[*haproxytemplatev1alpha1.HAProxyTemplateConfig, *haproxytemplatev1alpha1.HAProxyTemplateConfigList](
			"haproxytemplateconfigs",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *haproxytemplatev1alpha1.HAProxyTemplateConfig {
				return &haproxytemplatev1alpha1.HAProxyTemplateConfig{}
			},
			func() *haproxytemplatev1alpha1.HAProxyTemplateConfigList {
				return &haproxytemplatev1alpha1.HAProxyTemplateConfigList{}
			},
		),
	}
}
