# Ingress template library for HAProxy Template Ingress Controller
# Provides support for Kubernetes networking.k8s.io/v1 Ingress resources
# Implements the resource_ingress_* plugin interface for the base library

templateSnippets:
  resource_ingress_backend-name:
    template: >-
      {{- " " -}}ing_{{ ingress.metadata.namespace }}_{{ ingress.metadata.name }}_{{ path.backend.service.name }}_{{ path.backend.service.port.name | default(path.backend.service.port.number) }}

  resource_ingress_path-map-entry:
    template: |
      {#- Generate map entries for paths matching specified pathTypes #}
      {#- Usage: {% include "resource_ingress_path-map-entry" with context %} where path_types = ["Exact"] or ["Prefix", "ImplementationSpecific"] #}
      {%- for ingress in resources.ingresses.List() %}
      {%- for rule in (ingress.spec.rules | default([]) | selectattr("http", "defined")) %}
      {%- for path in (rule.http.paths | default([]) | selectattr("path", "defined") | selectattr("pathType", "in", path_types)) %}
      {{ rule.host }}{{ path.path }} {% include "resource_ingress_backend-name" -%}{{ suffix }}
      {% endfor %}
      {% endfor %}
      {% endfor %}

  resource_ingress_backends:
    template: |
      {#- Generate all backend definitions from ingress resources #}
      {#- Usage: {% include "resource_ingress_backends" %} #}
      {%- for ingress in resources.ingresses.List() %}
      {%- if ingress.spec and ingress.spec.rules %}
      {%- for rule in ingress.spec.rules %}
      {%- if rule.http and rule.http.paths %}
      {%- for path in rule.http.paths %}
      {%- if path.backend and path.backend.service %}
      {%- set service_name = path.backend.service.name %}
      {%- set port = path.backend.service.port.number | default(80) %}

      backend {%+ include "resource_ingress_backend-name" +%}
        balance roundrobin
        option httpchk GET {{ path.path | default('/') }}
        default-server check
        {%- filter indent(2, first=True) %}
        {% include "backend-annotations" %}
        {% include "backend-servers" %}
        {%- endfilter %}
      {%- endif %}
      {%- endfor %}
      {%- endif %}
      {%- endfor %}
      {%- endif %}
      {%- endfor %}

  map-entry-host-ingress:
    template: |
      {#- Generate host map entries for Ingress resources #}
      {%- for ingress in resources.ingresses.List() %}
      {%- for rule in (ingress.spec.rules | default([]) | selectattr("http", "defined")) %}
      {%- set host_without_asterisk = rule.host | replace('*', '', 1) %}
      {{ host_without_asterisk }} {{ host_without_asterisk }}
      {% endfor %}
      {% endfor %}

  map-entry-path-exact-ingress:
    template: |
      {#- Generate exact path map entries for Ingress resources #}
      {% set path_types = ["Exact"] %}
      {%- set suffix = "" %}
      {% include "resource_ingress_path-map-entry" %}

  map-entry-path-prefix-exact-ingress:
    template: |
      {#- Generate prefix-exact path map entries for Ingress resources #}
      {% set path_types = ["Prefix", "ImplementationSpecific"] %}
      {%- set suffix = "" %}
      {% include "resource_ingress_path-map-entry" %}

  map-entry-path-prefix-ingress:
    template: |
      {#- Generate prefix path map entries with trailing slash for Ingress resources #}
      {% set path_types = ["Prefix", "ImplementationSpecific"] %}
      {%- set suffix = "/" %}
      {% include "resource_ingress_path-map-entry" %}
