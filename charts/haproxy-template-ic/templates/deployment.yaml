apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "haproxy-template-ic.fullname" . }}
  labels:
    {{- include "haproxy-template-ic.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "haproxy-template-ic.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "haproxy-template-ic.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "haproxy-template-ic.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: controller
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/local/bin/controller"]
          args: ["run"]
          ports:
            - name: healthz
              containerPort: {{ .Values.controller.config.controller.healthz_port }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.controller.config.controller.metrics_port }}
              protocol: TCP
            {{- if gt (.Values.controller.debugPort | int) 0 }}
            - name: debug
              containerPort: {{ .Values.controller.debugPort }}
              protocol: TCP
            {{- end }}
            {{- if .Values.webhook.enabled }}
            - name: webhook
              containerPort: {{ .Values.webhook.port }}
              protocol: TCP
            {{- end }}
          env:
            - name: CONFIGMAP_NAME
              value: {{ .Values.controller.configmapName | quote }}
            - name: SECRET_NAME
              value: {{ include "haproxy-template-ic.fullname" . }}-credentials
            - name: VERBOSE
              value: {{ .Values.controller.config.logging.verbose | quote }}
            - name: WEBHOOK_SERVICE_NAME
              value: {{ include "haproxy-template-ic.fullname" . }}-webhook
            {{- if gt (.Values.controller.debugPort | int) 0 }}
            - name: DEBUG_PORT
              value: {{ .Values.controller.debugPort | quote }}
            {{- end }}
            {{- if .Values.webhook.enabled }}
            - name: WEBHOOK_PORT
              value: {{ .Values.webhook.port | quote }}
            {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
