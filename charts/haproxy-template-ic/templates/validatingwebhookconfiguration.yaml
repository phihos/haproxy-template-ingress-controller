{{- if .Values.webhook.enabled }}
{{- $webhookRules := list }}
{{- range $name, $resource := .Values.controller.config.watched_resources }}
{{- if $resource.enable_validation_webhook }}
{{- $webhookRules = append $webhookRules (dict "name" $name "resource" $resource) }}
{{- end }}
{{- end }}
{{- if $webhookRules }}
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: {{ include "haproxy-template-ic.fullname" . }}-webhook
  labels:
    {{- include "haproxy-template-ic.labels" . | nindent 4 }}
  {{- if .Values.webhook.certManager.enabled }}
  annotations:
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "haproxy-template-ic.fullname" . }}-webhook-cert
  {{- end }}
webhooks:
{{- range $rule := $webhookRules }}
  - name: {{ $rule.name }}.validation.{{ include "haproxy-template-ic.fullname" $ }}-webhook
    clientConfig:
      {{- if not $.Values.webhook.certManager.enabled }}
      {{- if not $.Values.webhook.caBundle }}
      {{- fail "webhook.caBundle is required when webhook.certManager.enabled is false" }}
      {{- end }}
      caBundle: {{ $.Values.webhook.caBundle }}
      {{- end }}
      service:
        namespace: {{ $.Release.Namespace }}
        name: {{ include "haproxy-template-ic.fullname" $ }}-webhook
        path: /validate
    rules:
      - apiGroups:
          {{- if eq $rule.resource.api_version "v1" }}
          - ""
          {{- else }}
          - {{ $rule.resource.api_version | regexFind "^[^/]+" }}
          {{- end }}
        apiVersions:
          {{- if eq $rule.resource.api_version "v1" }}
          - v1
          {{- else }}
          - {{ $rule.resource.api_version | regexFind "[^/]+$" }}
          {{- end }}
        resources:
          - {{ $rule.resource.resources }}
        operations:
          - CREATE
          - UPDATE
        scope: "*"
    failurePolicy: Fail
    matchPolicy: Equivalent
    sideEffects: None
    admissionReviewVersions:
      - v1
    timeoutSeconds: 10
{{- end }}
{{- end }}
{{- end }}
