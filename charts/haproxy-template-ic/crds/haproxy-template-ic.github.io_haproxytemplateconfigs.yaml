---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  name: haproxytemplateconfigs.haproxy-template-ic.github.io
spec:
  group: haproxy-template-ic.github.io
  names:
    kind: HAProxyTemplateConfig
    listKind: HAProxyTemplateConfigList
    plural: haproxytemplateconfigs
    shortNames:
    - htplcfg
    - haptpl
    singular: haproxytemplateconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.validationStatus
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          HAProxyTemplateConfig defines the configuration for the HAProxy Template Ingress Controller.

          This custom resource replaces the previous ConfigMap-based configuration approach,
          providing better validation, type safety, and support for embedded validation tests.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: HAProxyTemplateConfigSpec defines the desired state of HAProxyTemplateConfig.
            properties:
              controller:
                description: Controller contains controller-level settings (ports,
                  leader election, etc.).
                properties:
                  healthzPort:
                    description: |-
                      HealthzPort is the port for health check endpoints.

                      Default: 8080
                    maximum: 65535
                    minimum: 1
                    type: integer
                  leaderElection:
                    description: LeaderElection configures leader election for high
                      availability.
                    properties:
                      enabled:
                        description: |-
                          Enabled determines whether leader election is active.

                          If false, the controller assumes it is the sole instance (single-replica mode).
                          Default: true
                        type: boolean
                      leaseDuration:
                        description: |-
                          LeaseDuration is the duration that non-leader candidates will wait
                          to force acquire leadership (measured against time of last observed ack).

                          Format: Go duration string (e.g., "60s", "1m")
                          Default: 60s
                          Minimum: 15s
                        type: string
                      leaseName:
                        description: |-
                          LeaseName is the name of the Lease resource used for coordination.

                          Default: haproxy-template-ic-leader
                        minLength: 1
                        type: string
                      renewDeadline:
                        description: |-
                          RenewDeadline is the duration that the acting leader will retry
                          refreshing leadership before giving up.

                          Format: Go duration string (e.g., "15s")
                          Default: 15s
                          Must be less than LeaseDuration
                        type: string
                      retryPeriod:
                        description: |-
                          RetryPeriod is the duration the LeaderElector clients should wait
                          between tries of actions.

                          Format: Go duration string (e.g., "5s")
                          Default: 5s
                          Must be less than RenewDeadline
                        type: string
                    type: object
                  metricsPort:
                    description: |-
                      MetricsPort is the port for Prometheus metrics.

                      Default: 9090
                    maximum: 65535
                    minimum: 1
                    type: integer
                type: object
              credentialsSecretRef:
                description: |-
                  CredentialsSecretRef references the Secret containing HAProxy Dataplane API credentials.

                  The Secret must contain the following keys:
                    - dataplane_username: Username for production HAProxy Dataplane API
                    - dataplane_password: Password for production HAProxy Dataplane API
                    - validation_username: Username for validation HAProxy instance
                    - validation_password: Password for validation HAProxy instance

                  If the namespace is omitted, it defaults to the same namespace as this config resource.
                properties:
                  name:
                    description: Name is the name of the Secret.
                    minLength: 1
                    type: string
                  namespace:
                    description: |-
                      Namespace is the namespace of the Secret.

                      If empty, defaults to the same namespace as the HAProxyTemplateConfig.
                    type: string
                required:
                - name
                type: object
              dataplane:
                description: Dataplane configures the Dataplane API for production
                  HAProxy instances.
                properties:
                  configFile:
                    description: |-
                      ConfigFile is the path to the main HAProxy configuration file.

                      Used for validation.
                      Default: /etc/haproxy/haproxy.cfg
                    type: string
                  driftPreventionInterval:
                    description: |-
                      DriftPreventionInterval triggers periodic deployments to prevent configuration drift.

                      A deployment is automatically triggered if no deployment has occurred within this interval.
                      This detects and corrects drift caused by external Dataplane API clients.
                      Format: Go duration string (e.g., "60s", "5m")
                      Default: 60s
                    type: string
                  generalStorageDir:
                    description: |-
                      GeneralStorageDir is the directory for general files (error pages, etc.).

                      Used for both validation and deployment.
                      Default: /etc/haproxy/general
                    type: string
                  mapsDir:
                    description: |-
                      MapsDir is the directory for HAProxy map files.

                      Used for both validation and deployment.
                      Default: /etc/haproxy/maps
                    type: string
                  minDeploymentInterval:
                    description: |-
                      MinDeploymentInterval enforces minimum time between consecutive deployments.

                      This prevents rapid-fire deployments from hammering HAProxy instances.
                      Format: Go duration string (e.g., "2s", "500ms")
                      Default: 2s
                    type: string
                  port:
                    description: |-
                      Port is the Dataplane API port for production HAProxy pods.

                      Default: 5555
                    maximum: 65535
                    minimum: 1
                    type: integer
                  sslCertsDir:
                    description: |-
                      SSLCertsDir is the directory for SSL certificates.

                      Used for both validation and deployment.
                      Default: /etc/haproxy/ssl
                    type: string
                type: object
              files:
                additionalProperties:
                  description: "GeneralFile defines a general file generated from
                    a template.\n\nThe filename is derived from the map key in the
                    configuration.\nThe full path is constructed using the get_path
                    filter in templates:\n\n\t{{ \"503.http\" | get_path(\"file\")
                    }} â†’ /etc/haproxy/general/503.http"
                  properties:
                    template:
                      description: Template is the Gonja template for generating the
                        file content.
                      minLength: 1
                      type: string
                  required:
                  - template
                  type: object
                description: |-
                  Files maps file names to their template definitions.

                  These generate auxiliary files like custom error pages.
                type: object
              haproxyConfig:
                description: HAProxyConfig contains the main HAProxy configuration
                  template.
                properties:
                  template:
                    description: Template is the Gonja template for generating haproxy.cfg.
                    minLength: 1
                    type: string
                required:
                - template
                type: object
              logging:
                description: Logging configures logging behavior.
                properties:
                  verbose:
                    description: |-
                      Verbose controls log level.

                      Values:
                        0: WARNING
                        1: INFO
                        2: DEBUG

                      Default: 1
                    maximum: 2
                    minimum: 0
                    type: integer
                type: object
              maps:
                additionalProperties:
                  description: MapFile defines a HAProxy map file generated from a
                    template.
                  properties:
                    template:
                      description: |-
                        Template is the Gonja template for generating the map file content.

                        The rendered output should be in HAProxy map file format (key-value pairs).
                      minLength: 1
                      type: string
                  required:
                  - template
                  type: object
                description: |-
                  Maps maps map file names to their template definitions.

                  These generate HAProxy map files for backend routing and other features.
                type: object
              podSelector:
                description: PodSelector identifies which HAProxy pods to configure.
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      MatchLabels are the labels to match HAProxy pods.

                      Example:
                        app: haproxy
                        component: loadbalancer
                    minProperties: 1
                    type: object
                required:
                - matchLabels
                type: object
              sslCertificates:
                additionalProperties:
                  description: SSLCertificate defines an SSL certificate generated
                    from a template.
                  properties:
                    template:
                      description: |-
                        Template is the Gonja template for generating the certificate content.

                        The rendered output should be in PEM format (certificate + private key).
                      minLength: 1
                      type: string
                  required:
                  - template
                  type: object
                description: |-
                  SSLCertificates maps certificate names to their template definitions.

                  These generate SSL certificate files for HAProxy.
                type: object
              templateSnippets:
                additionalProperties:
                  description: TemplateSnippet defines a reusable template fragment.
                  properties:
                    priority:
                      description: |-
                        Priority determines the rendering order when multiple snippets are included.

                        Lower values are rendered first. Snippets with the same priority are sorted alphabetically by name.
                        Default: 500
                      maximum: 1000
                      minimum: 0
                      type: integer
                    template:
                      description: |-
                        Template is the Gonja template content.

                        Can be included in other templates using {% include "snippet_name" %}.
                      minLength: 1
                      type: string
                  required:
                  - template
                  type: object
                description: |-
                  TemplateSnippets maps snippet names to reusable template fragments.

                  Snippets can be included in other templates using {% include "name" %}.
                type: object
              validationTests:
                additionalProperties:
                  description: |-
                    ValidationTest defines a validation test with fixtures and assertions.

                    The test name is provided by the map key in ValidationTests.
                  properties:
                    assertions:
                      description: Assertions defines the validation checks to perform.
                      items:
                        description: ValidationAssertion defines a single validation
                          check.
                        properties:
                          description:
                            description: Description explains what this assertion
                              validates.
                            type: string
                          expected:
                            description: Expected is the expected value for equals
                              assertions.
                            type: string
                          jsonpath:
                            description: JSONPath is the JSONPath expression for jsonpath
                              assertions.
                            type: string
                          pattern:
                            description: Pattern is the regex pattern for contains/not_contains
                              assertions.
                            type: string
                          target:
                            description: |-
                              Target specifies what to validate.

                              Format depends on assertion type:
                                - haproxy_valid: not used
                                - contains/not_contains/equals: "haproxy_config", "maps.<name>", "files.<name>", "sslCertificates.<name>"
                                - jsonpath: the resource to query
                            type: string
                          type:
                            description: |-
                              Type is the assertion type.

                              Supported types:
                                - haproxy_valid: Validates that generated HAProxy config is syntactically valid
                                - contains: Checks if target contains pattern (regex)
                                - not_contains: Checks if target does not contain pattern (regex)
                                - equals: Checks if target equals expected value
                                - jsonpath: Evaluates JSONPath expression against target
                                - match_count: Counts how many times pattern matches in target (regex)
                            enum:
                            - haproxy_valid
                            - contains
                            - not_contains
                            - equals
                            - jsonpath
                            - match_count
                            type: string
                        required:
                        - type
                        type: object
                      minItems: 1
                      type: array
                    description:
                      description: Description explains what this test validates.
                      type: string
                    fixtures:
                      additionalProperties:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                      description: |-
                        Fixtures defines the Kubernetes resources to use for this test.

                        Keys are resource type names (matching WatchedResources keys).
                        Values are arrays of resources as raw JSON.

                        Example:
                          ingresses:
                            - apiVersion: networking.k8s.io/v1
                              kind: Ingress
                              metadata:
                                name: test-ingress
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - assertions
                  - fixtures
                  type: object
                description: |-
                  ValidationTests contains embedded validation test definitions.

                  The map key is the test name, which must be unique.

                  These tests are executed:
                    - During admission webhook validation (before resource is saved)
                    - Via the "controller validate" CLI command (pre-apply validation)

                  Tests ensure templates generate valid HAProxy configurations before deployment.
                type: object
              watchedResources:
                additionalProperties:
                  description: WatchedResource configures watching for a specific
                    Kubernetes resource type.
                  properties:
                    apiVersion:
                      description: APIVersion is the Kubernetes API version (e.g.,
                        "networking.k8s.io/v1").
                      minLength: 1
                      type: string
                    enableValidationWebhook:
                      description: |-
                        EnableValidationWebhook enables admission webhook validation for this resource.

                        When enabled, the controller will validate resources of this type before they're saved.
                        Default: false
                      type: boolean
                    fieldSelector:
                      description: |-
                        FieldSelector filters resources by fields (server-side filtering).

                        Example: "metadata.namespace=default"
                        Note: Not all fields support field selectors. Use label selectors when possible.
                      type: string
                    indexBy:
                      description: |-
                        IndexBy specifies JSONPath expressions for extracting index keys.

                        Resources are indexed by these values for O(1) lookup in templates.

                        Examples:
                          - ["metadata.namespace", "metadata.name"]
                          - ["metadata.labels['kubernetes.io/service-name']"]
                      items:
                        type: string
                      type: array
                    labelSelector:
                      description: |-
                        LabelSelector filters resources by labels (server-side filtering).

                        Example: "app=nginx,environment=production"
                      type: string
                    namespaceSelector:
                      description: |-
                        NamespaceSelector filters resources by namespace labels.

                        Example: "environment=production"
                        If empty, watches resources in all namespaces (requires cluster-wide RBAC).
                      type: string
                    resources:
                      description: |-
                        Resources is the plural form of the Kubernetes resource type (e.g., "ingresses", "services").

                        This is the name used in RBAC rules and API paths.
                      minLength: 1
                      type: string
                    store:
                      description: |-
                        Store specifies the storage backend for this resource type.

                        Valid values:
                          - "full": MemoryStore - keeps all resources in memory (faster, higher memory usage)
                          - "on-demand": CachedStore - fetches resources on-demand with caching (slower, lower memory usage)

                        Default: "full"

                        Use "on-demand" for large resources accessed infrequently (e.g., Secrets).
                        Use "full" for frequently accessed resources (e.g., Ingress, Service, EndpointSlice).
                      enum:
                      - full
                      - on-demand
                      type: string
                  required:
                  - apiVersion
                  - resources
                  type: object
                description: |-
                  WatchedResources maps resource type names to their watch configuration.

                  Each key is a user-defined name for the resource type (e.g., "ingresses", "services").
                  This name is used in templates to access the resources.
                minProperties: 1
                type: object
              watchedResourcesIgnoreFields:
                description: |-
                  WatchedResourcesIgnoreFields specifies JSONPath expressions for fields
                  to remove from all watched resources to reduce memory usage.

                  Example: ["metadata.managedFields", "metadata.resourceVersion"]
                items:
                  type: string
                type: array
            required:
            - credentialsSecretRef
            - haproxyConfig
            - podSelector
            - watchedResources
            type: object
          status:
            description: HAProxyTemplateConfigStatus defines the observed state of
              HAProxyTemplateConfig.
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the config's state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastValidated:
                description: LastValidated is the timestamp of the last successful
                  validation.
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration reflects the generation most recently
                  observed by the controller.
                format: int64
                type: integer
              validationMessage:
                description: ValidationMessage contains human-readable validation
                  details.
                type: string
              validationStatus:
                description: ValidationStatus indicates the overall validation status.
                enum:
                - Valid
                - Invalid
                - Unknown
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
